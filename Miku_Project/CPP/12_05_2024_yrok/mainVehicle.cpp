//Создание базового класса и трех наследников с переопределением методов
//Цель : Практика в определении базового класса и производных классов с переопределением виртуальных функций для демонстрации полиморфизма.
//
//Описание задания :
//
//Определите базовый класс Vehicle(Транспортное средство) :
//
//  Создайте базовый класс Vehicle с виртуальной функцией displayInfo(), которая выводит информацию о транспортном средстве.
//  Добавьте в класс Vehicle защищенные атрибуты maxSpeed(максимальная скорость) и fuelType(тип топлива).
//  Создайте три производных класса : Car, Bike, и Boat :
//
//Класс Car должен содержать дополнительный атрибут numberOfDoors(количество дверей).
//Класс Bike должен содержать дополнительный атрибут hasBasket(наличие корзины).
//Класс Boat должен содержать дополнительный атрибут boatType(тип лодки).
//Переопределите функцию displayInfo() в каждом из производных классов :
//
//Функция должна выводить всю информацию о транспортном средстве, включая уникальные атрибуты каждого класса.
//В функции main() создайте объекты каждого класса и продемонстрируйте полиморфное поведение :
//
//Создайте массив или вектор указателей на Vehicle.
//Добавьте в массив объекты каждого типа(автомобиль, велосипед, лодка).
//Используйте цикл для вызова displayInfo() у каждого объекта в массиве.


#include <iostream>
#include <string>

using namespace std;


class Vehicle {
    private:
        int maxSpeed;
        string fuelType;

    public:
        Vehicle(int maxSpeedInfo, string fuelTypeInfo) {
            maxSpeed = maxSpeedInfo;
            fuelType = fuelTypeInfo;
        };

        void VehicleFullInfo {
            cout << "maxSpeed: " << maxSpeed << endl;
            cout << "fuelType: " << fuelType << endl;
        }

        



}


class Car {
    public:
        int wheels;
        string engine;
}



